/**
 * Created by LBS006 on 12/16/14.
 */

var lib = require('lib');

module.exports = function (paramMongoose){

    var activitySchema = new paramMongoose.Schema({
        s : lib.permissionsSchema({all:"r"}),
        ct: { //creator
            uID: String,//id of the user who created the service
            oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
            cd: {type: Date, default: Date.now}//creation date
        },
        md: {//modified
            uID: String,//id of user who changed the service
            oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
            lu: {type:Date,required:true}//last updated date
        },
        abd: { // 新建事务 activity basic definition
            ac: String, // 事务编号 activity code
            at: String, //  事务类别 activity type
            vc: String, //  事务前台显示限制 front end visibility control , is the activity publicly visible
            an: String, // 事务名称 activity name (used internally, not shown to public)
            aps: {type:Number, default:10},//  事务发布状态 activity publishing status (created, saved, publishready, published, responding, closed, stopped)
            arv: String, // 事务结果单位审核 does the company needs to verify activity response result?
            fdn: String, // 前台显示名称 activity front end display name. This could be an input field
            asd: Date, // 事务有效开始日期 activity effective start date ppl can start responding after this date
            aiv: String, // 事务信息校对  does the response form data needs validation from the respondents
            apm: String, // 收费方式 activity payment method,
            acd: Date, // 事务有效截止日期 Activity effective closing date,
            apt: String, //发布行为类型 activity publishing type/category (define in utils.js)
            pcn: String, //publishing company name
            ul: String,
            mass : {type:Boolean, default:false} //can this activity be automatically mass-processed
        },

        ars:{ // 事务清分方式 activity revenue splitting time and phase
            st: String,  // 清分时间 splitting time : daily, weekly, monthly, quarterly
            sp: String // 清分频率 splitting phase:  after service is consumed, after response is closed, after activity is closed
        },
        arc: { // 事务响应限制 activity response control (who can respond, like only males/over a certain age ...)
            pc: [String],   //service points location  postal code criteria. could be null query: replace ending zeros with \d*$ where postal colde is regexp ^nn\d*$ where nn is a number like (per 2 nn or nnnn or nnnnnn)
            mr: Number, // 响应人数 maximum number of response
            rs: String, // 响应对象 response subject. students, teachers , etc
            rg: String, // 性别 respondent gender, male or female
            ra: Date,   // 年龄限制 respondent age limit min age
            rt: String,  // 用户性质 respondent user type, validated user or not validated user ..
            crc: Number, //current responses completed count (Users have submitted/paid. Services perhaps not rendered)
            prc: Number,  //current processed responses completed count (User have submitted/paid. Services have been rendered.)
            ptl: Number //Total responses to be processed. Used in progress bar for autoprocessing
        },
        sqc:[{ //services query criteria or parameters to build query and obtained the services associated with this activity
            sn:{type:String,required:true}, // service name criteria. can not be null
            st:String, // services type criteria. could be null
            pc:[String],  //service points location  postal code criteria. could be null
            pl:String, // ids of specific price list selected. could be null
            min:Number, // minimum price criteria
            max:Number, // maximum price criteria
            sq:Number, //Sequence order of object
            ui:{//when loading an activty in edit mode these values need to displayed in the ui
              serviceCode:String//show 所有网点 when empty
              ,price:String//min max or just a price
              ,serviceName:String//Name of the service (not the id)
              ,servicePointName:String//Name of the service point
            }
        }],
        fm:{type:paramMongoose.Schema.Types.ObjectId, ref: 'formmetas'}, // activity form meta data
        um:{type:paramMongoose.Schema.Types.ObjectId, ref: 'usermetas'}, // activity user meta data
        //sc: function()
        // there is also a list of respondents but that information is place in the respondent list. the activity is link to that list
        // there is also a list of responses but that is place in the response list. the activity is linked to the response list f
        ds:{type:Boolean, default: false},
        hsf:{type:Boolean, default: false}//hide services flag
    });
    return activitySchema;
};
