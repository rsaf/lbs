/**
 * Created by LBS006 on 12/19/14.
 */

var lib = require('lib');
module.exports = function (paramMongoose) {
    var respondent = new paramMongoose.Schema({
        s : lib.permissionsSchema({all:"r"}),
        ct: { //creator
            uID: {type: paramMongoose.Schema.Types.ObjectId, required: true}, //id of the user who created the service
            oID: {type: paramMongoose.Schema.Types.ObjectId, required: true}, //organisation id
            cd: {type: Date, default: Date.now} //creation date
        },
        md: {//modified
            uID: {type: paramMongoose.Schema.Types.ObjectId, required: true},//id of user who changed the service
            oID: {type: paramMongoose.Schema.Types.ObjectId, required: true},//organisation id
            lu: {type: Date, required: true}//last updated date
        },
        dp: { //database identifiers properties // we may not need these properties
            ac: {type: paramMongoose.Schema.Types.ObjectId, ref: 'activities'}, //business activity code
            ui: {type: paramMongoose.Schema.Types.ObjectId}, //target respondent user account identify code
            tc: {type: paramMongoose.Schema.Types.ObjectId}, //business transaction code
            Rp: {type: paramMongoose.Schema.Types.ObjectId, ref: 'responses'} //respondent
        },

        si:{ //search index
        ssi:{ // string searchable index
            si1: String,
            si2: String,
            si3: String
        },
        nsi:{ // number searchable index
            ni1: Number,
            ni2: Number,
            ni3: Number
        },
        dsi:{ // date searchable index
            ni1: Date,
            ni2: Date,
            ni3: Date
        }
        },
        ac:{type:paramMongoose.Schema.Types.ObjectId, ref: 'Activity'}// activity
    });
    return respondent;
}


