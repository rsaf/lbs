/*
 * Tests for ../smm_interface
 */
//var mongoose = require('mongoose');


var oCMM = require('cmm');
var oPMM = require('../pmm_Interface.js');

function message(m) {
    if (m.op === 'dependency') {
        m.ns = 'pmm';
        return oCMM.dependency(m);
    }
}
var init_message = {
    'op': 'init',
     ns: '',
    'pl': {fn: message}
};


//exports.test_pmm_updateStandardByCode = function (test) {
//    var m_standard = {ns: null,op:'pmm_updateStandardByCode', pl: null};
//    m_standard.pl = {
//        uID:'54c1c79c4d754999038abf1b',
//        oID:'54c1c79c4d754999038abf1c',
//        sc:'Z007',
//        it:'证照类别7',
//        swp:'标准像宽pix'
//    };
//
//    oPMM.pmm_updateStandardByCode(m_standard)
//        .then(function(r2){
//          console.log(r2.pl);
//          test.expect(1);
//          test.equals(r2.er, null);
//          test.done();
//        }).
//        fail(function(r3){
//          console.log(r3);
//          test.done();
//        });
//};

//exports.test_pmm_createStandard = function (test) {
//    var m_standard = {ns: null,op:'pmm_createStandard', pl: null};
//    m_standard.pl = {
//        uID:'54c1c79c4d754999038abf1b',
//        oID:'54c1c79c4d754999038abf1c',
//        sc:'Z007',
//        it:'证照类别1',
//        swp:'标准像宽pix'
//    };
//
//    oPMM.pmm_createStandard(m_standard)
//        .then(function(r2){
//          console.log(r2.pl);
//          test.expect(1);
//          test.equals(r2.er, null);
//          test.done();
//        }).
//        fail(function(r3){
//          console.log(r3);
//          test.done();
//        });
//};

//
//exports.test_pmm_readStandardByCode = function (test) {
//    var m_standard = {ns: null,op:'pmm_readStandardByCode', pl: null};
//    m_standard.pl = {
//        sc:'Z007'
//    };
//    oPMM.pmm_readStandardByCode(m_standard)
//        .then(function(r2){
//            console.log(r2.pl);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};
//
//

//
//exports.test_pmm_readAllStandards = function (test) {
//    var m_standard = {ns: null,op:'pmm_readAllStandards', pl: null};
//
//    oPMM.pmm_readAllStandards(m_standard)
//        .then(function(r2){
//            console.log(r2.pl);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};



//exports.test_pmm_deleteStandardByCode= function (test) {
//    var m_standard = {ns: null,op:'pmm_deleteStandardByCode', pl: null};
//    m_standard.pl = {
//        sc:'Z007'
//    };
//    oPMM.pmm_deleteStandardByCode(m_standard)
//        .then(function(r2){
//            console.log(r2.pl);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};


exports.test_pmm_createUsage = function (test) {
    var m_usage = {ns: null,op:'pmm_createUsage', pl: null};
    m_usage.pl = {
        uID:'54c1c79c4d754999038abf1b',
        oID:'54c1c79c4d754999038abf1c',

        un: '证件办理事务',
        uc: 'Y002',
        sd: ['54ce3b8e9a5b735c148c7d5c','54cef0a6919aa218ba17e27b']
    };
    oPMM.pmm_createUsage(m_usage)
        .then(function(r2){
            console.log(r2.pl);
            test.expect(1);
            test.equals(r2.er, null);
            test.done();
        }).
        fail(function(r3){
            console.log(r3);
            test.done();
        });
};


//exports.test_pmm_ReadUsageByCode = function (test) {
//    var m_usage = {ns: null,op:'pmm_readUsageByCode', pl: null};
//    m_usage.pl = {
//        uc: 'Y001'
//    };
//    oPMM.pmm_readUsageByCode(m_usage)
//        .then(function(r2){
//            console.log(r2.pl);
//            //var cd = r2.pl.sd[0].md.lu;
//            //console.log(cd);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};
//


//
//exports.test_pmm_readAllUsages = function (test) {
//    var m_usage = {ns: null,op:'pmm_readAllUsages', pl: null};
//    m_usage.pl = {
//    };
//    oPMM.pmm_readAllUsages(m_usage)
//        .then(function(r2){
//            console.log(r2.pl);
//            //var cd = r2.pl.sd[0].md.lu;
//            //console.log(cd);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};
//


exports.test_pmm_updateUsageByCode = function (test) {
    var m_usage = {ns: null,op:'pmm_updateUsageByCode', pl: null};
    m_usage.pl = {
        uID:'54c1c79c4d754999038abf12',
        oID:'54c1c79c4d754999038abf13',

        un: '证件办理事务5',
        uc: 'Y002',
        sd: ['54ce3b8e9a5b735c148c7d5c','54ce3be58faf0cbd14d0aff3']
    };
    oPMM.pmm_updateUsageByCode(m_usage)
        .then(function(r2){
            console.log(r2.pl);
            test.expect(1);
            test.equals(r2.er, null);
            test.done();
        }).
        fail(function(r3){
            console.log(r3);
            test.done();
        });
};

//exports.test_pmm_deleteUsageByCode = function (test) {
//    var m_usage = {ns: null,op:'pmm_deleteUsageByCode', pl: null};
//    m_usage.pl = {
//        uc: 'Y001'
//    };
//    oPMM.pmm_deleteUsageByCode(m_usage)
//        .then(function(r2){
//            console.log(r2.pl);
//            //var cd = r2.pl.sd[0].md.lu;
//            //console.log(cd);
//            test.expect(1);
//            test.equals(r2.er, null);
//            test.done();
//        }).
//        fail(function(r3){
//            console.log(r3);
//            test.done();
//        });
//};

exports.setUp = function setUp(callback) {
    console.log('\nsetting up integration testing ....');
    oCMM.init(init_message).then(function (r) {
        oPMM.init(init_message).then(function (r1) {
            console.log(r1);
            callback();
        }).fail(function (r) {
            console.log(r);
        });
    }).fail(function (r) {
        console.log(r);
    });

};

exports.tearDown = function tearDown(callback) {
    console.log("\ntearing down integration testing ...");
    callback();
};


