# Common functions
#
# TODO: move to a reusable functions.sh file with functions from main.sh
#

# from: https://gist.github.com/markusfisch/6110640
uuid()
{
  if [ ! -z "$1" ]; then
    RANDOM=$1
  fi
  
  local N B C='89ab'
 
  for (( N=0; N < 16; ++N ))
  do
    B=$(( $RANDOM%256 ))
 
    case $N in
      6)
        printf '4%x' $(( B%16 ))
        ;;
      8)
        printf '%c%x' ${C:$RANDOM%${#C}:1} $(( B%16 ))
        ;;
      3 | 5 | 7 | 9)
        printf '%02x-' $B
        ;;
      *)
        printf '%02x' $B
        ;;
    esac
  done
 
  echo
}
export -f uuid

getBucketNameFromUuid() 
{

  FIRST_CHAR=${1:1}
  # TODO: replace by {{bucket1}} and {{bucket2}} when moving to Ansible templates
  if [ "$FIRST_CHAR" \< "a" ]; then
    export BUCKET_NAME=localhost
  else
    export BUCKET_NAME=localhost
  fi
}
export -f getBucketNameFromUuid

function getPathFromUuid {
  # generate the directory names from UUID
  ONE=$( echo "$2" | cut -c 1)
  TWO=$( echo "$2" | cut -c 2)
  THREE=$( echo "$2" | cut -c 3)
  export UUID_PATH=$1/${ONE}/${TWO}/${THREE}/$2
}
export -f getPathFromUuid

function createDirectoryDeletedOnFailure {
  # create destination path and install cleanup hook
  getPathFromUuid $1 $2
  export DEST_PATH=$UUID_PATH
  echo "Creating $DEST_PATH"
  mkdir -p ${DEST_PATH}

  function finish {
    RV=$?
    if [ "$RV" -ne "0" ]; then
      echo "Deleting $DEST_PATH"
      rm -rf "$DEST_PATH"
    fi
    exit $RV
  }
  trap finish INT TERM EXIT
}
export -f createDirectoryDeletedOnFailure

function createLocalSymlink {
  #@Todo create function to generate symbolic for localhost testing..
  #@Todo DEST_PATH AND FILE_ROOT needs to be parameters as these change for each operations uploadfile, uploadform etc ..
  FILE_EXT=$1
  FILE_ROOT=$2
  if [ "$SERVERNAME" == "localhost" ]; then
    ln -fs $DEST_PATH/*.$FILE_EXT $FILE_ROOT/
  fi
}

export -f createLocalSymlink
