#!/bin/sh

createDirectoryDeletedOnFailure $FILE_ROOT $FILE_UUID

ALL_PATH=""
SCP_PATH=""
for option in $OPTIONS
do
  # see if it's a special filename with the bucket prefix
  echo "Evaluating $option"
  ACTUAL_FN=$(echo $option | cut -s -d ":" -f 2)
  # -s suppress lines that don't actually have delimiters

  # if it is, keep reference to source bucket and process based on the second part
  if [ ! -z "$ACTUAL_FN" ]; then
    SOURCE_BUCKET=$(echo $option | cut -s -d ":" -f 1)
    option="$ACTUAL_FN"
  fi

  # figure out what the full path should be to the image
  getPathFromUuid $IMAGE_ROOT ${option%.*}

  # if there is no bucket, just give the local path
  echo "Source bucket: $SOURCE_BUCKET"
  ALL_PATH="$ALL_PATH$option "
  if [ -z "$SOURCE_BUCKET" ]; then
    SCP_PATH="$SCP_PATH$UUID_PATH/$option "
  else
  # if there is a bucket, put back the hostname
    SCP_PATH="${SCP_PATH}$SOURCE_BUCKET:$UUID_PATH/$option "
  fi
done

ORIGINAL_FILE_XLSX=${DEST_PATH}/${FILE_UUID}.xlsx
ORIGINAL_FILE_ZIP=${DEST_PATH}/${FILE_UUID}.zip

echo "Target zip name $ORIGINAL_FILE_ZIP"
echo "Passed XLSX $ORIGINAL_FILE_XLSX"
echo "Image files to transfer $SCP_PATH"

# use standard input for the XLSX information
cat > $ORIGINAL_FILE_XLSX || exit 10

# use local and remote paths for transfers
echo "Transferring $SCP_PATH to $DEST_PATH"
# to make sure we are not forwarding the agent of the source (spider)
# by suppressing the agent forwarding environment variable
# otherwise we go through the main.sh and scp gets confused
echo "$SSH_AUTH_SOCK"
export SSH_AUTH_SOCK=""
scp -i ~uploadbot/.ssh/id_rsa -o StrictHostKeyChecking=no $SCP_PATH $DEST_PATH || exit 20

# create or update zip file if it exists with excel file and all the image files
echo "Zipping $ALL_PATH into $ORIGINAL_FILE_ZIP"
cd $DEST_PATH
zip -u $ORIGINAL_FILE_ZIP `basename $ORIGINAL_FILE_XLSX` $ALL_PATH || exit 30
echo "Removing copied files"
rm $ORIGINAL_FILE_XLSX $ALL_PATH || exit 40

#@Todo remove this code block and replace it with a function call define in main.sh doing the same job
if [ "$SERVERNAME" == "localhost" ]; then
  ln -fs $DEST_PATH/* ${FILE_ROOT}/
fi

# add at command to delete directory in 15 minutes
echo "/bin/rm -fr $DEST_PATH" | at now + 15 minutes

exit 0