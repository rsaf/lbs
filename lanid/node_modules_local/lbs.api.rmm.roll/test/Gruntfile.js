 module.exports = function(grunt) {

  // Project configuration.
  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),
    nodeunit: {
      integration: ['*test.js']
    },
    watch: {
      integration: {
        files: ['../*.js','**/*test.js','../models/**/*.js','fixtures/*.js'],
        tasks: ['integrationtest']
      }
    }
  });
  grunt.registerTask('dropdb','drops rmm database.',function(){
    var done = this.async();
    var MongoClient = require('mongodb').MongoClient
    MongoClient.connect('mongodb://localhost/rmm', function(err, db) {
      if(err){
        throw new Error('Unable to connect to rmm.');
      }
      db.dropDatabase(function(err){
        db.close();
        if(err){
          throw new Error('Unable to drop wmm.');
        }
        done();
      });
    });
  });
  grunt.registerTask('integrationtest','Runs the integration tests.',function(){
    console.log('');
    console.log('*******************************************************************************');
    console.log('*********  Running integration tests, to drop database before test do *********');
    console.log('*********  grunt --dropdb=true                                        *********');
    console.log('*******************************************************************************');
    if(grunt.option('dropdb')){
      grunt.task.run('dropdb');
    }
    grunt.task.run('nodeunit:integration');
  });
  // Load the plugin that provides the "nodeunit" task.
  grunt.loadNpmTasks('grunt-contrib-nodeunit');
  // Load the plugin that provides the "watch" task.
  grunt.loadNpmTasks('grunt-contrib-watch');
  // Default task(s).
  grunt.registerTask('default', ['integrationtest']);
};