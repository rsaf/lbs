/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
var lib = require("lib");
module.exports = function (paramMongoose){

var requestSchema = new paramMongoose.Schema({
    s : lib.permissionsSchema({all:""}),
    //_id: {type:paramMongoose.Schema.Types.ObjectId,required:true} // mongodb automatically create this one for us.
    ct: { //creator
        uID: {type:String,required:true},//id of the user who created this record
        oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
        cd: {type: Date, default:new Date()}//creation date
    },
    md: {//modified
        uID: {type:String,required:true},//id of user who changed the service
        oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
        lu: {type:Date, default:new Date()}//last update date
    },

    rdu: {type:String,required:false}, // request destination user loginName
    rdo: {type:paramMongoose.Schema.Types.ObjectId,required:true}, // request destination organisation
    rc: String, //request code
    rt: String, // request title
    rd: {type:Date, default: new Date()}, //  request date time
    rsu: String,// request source user
    rso: {type:paramMongoose.Schema.Types.ObjectId,required:true},// request source organisation
    rs: Number, // request Status
    rb: String,  // request body (detail)
    ric:String, //request initiating company
    ei: [
      {
        col:String
        ,mod:String
        ,ei:String
      }
    ],//entity information, containing collection name(s) and module(s) to implement accepting and refusing requests and the id (ei) of the entity to update
    url:String,//The url to see the details of the to be approved or rejected entity, if multiple only one is used
    rtr: {type: String, ref: 'rtypes'}, // request type reference
    ds: {type:Boolean,default:false}// delete status
});
return requestSchema;
};