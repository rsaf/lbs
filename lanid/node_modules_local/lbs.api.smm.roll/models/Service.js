/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var lib = require("lib");
module.exports = function (paramMongoose){
var serviceSchema = paramMongoose.Schema({
    s : lib.permissionsSchema({all:"r"}),
  ct: { //creator 
    uID: {type:String,required:true},//id of the user who created the service
    oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
    cd: {type: Date, default: new Date()}//creation date
  },
  md: {//modified
    uID: {type:String,required:true},//id of user who changed the service
    oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
    lu: {type:Date,required:true}//last updated date
  }
   //TODO - remove ct.oID references elsewhere, and point them to new field 'ownerOrganization'
  ,serviceCode:String
  ,serviceName:{ type: paramMongoose.Schema.Types.ObjectId, ref: 'servicenames',required:true }
  ,serviceType:{ type: paramMongoose.Schema.Types.ObjectId, ref: 'servicetypes',required:true }
  ,briefOverview:String
  ,standardPayment:[Number]
  ,standardServicePrice:Number
  ,standardPricing:Number
  ,standardServiceNotes:String
  ,standardReservationRequest:{type:Boolean,default:false}
  ,ds:{type:Boolean,default:false}//delete status
  ,status:Number
  ,PriceList:[{ type: paramMongoose.Schema.Types.ObjectId, ref: 'pricelists' }]
});

//Model Declaration ===============================

//public Methods ===============================
serviceSchema.statics.servicesByCreator = function(userName,orgid, paramCallback){
    return this.find({"ds":{"$ne":true}, $or:[{"ct.uID" : userName},{"ct.oID":orgid}]})
      .populate('serviceType serviceName')
      .sort('-md.lu')
      .exec(paramCallback); //static method

   //db.services.ensureIndex({'ct.cuID':1,'md.lu':-1})
};


return serviceSchema;

};