
var lib = require("lib");
module.exports = function (paramMongoose){
  
var pricelistSchema = paramMongoose.Schema({
    s : lib.permissionsSchema({all:"r"}),
  ct: { //creator 
    uID: {type:String,required:true},//id of the user who created the pricelist
    oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
    cd: {type: Date, default: Date.now}//creation date
  },
  md: {//modified
    uID: {type:String,required:true},//id of user who changed the pricelist
    oID: {type:paramMongoose.Schema.Types.ObjectId,required:true},//organisation id
    lu: {type:Date,required:true}//last updated date
  }
  ,servicePoint : { type: paramMongoose.Schema.Types.ObjectId, ref: 'servicepoints', required:true }
  ,serviceType : { type: paramMongoose.Schema.Types.ObjectId, ref: 'servicetypes' }
  ,service      : { type: paramMongoose.Schema.Types.ObjectId, ref: 'services', required:true }
  ,serviceName : { type: paramMongoose.Schema.Types.ObjectId, ref: 'servicenames', required:true }
  ,pc : { type : String, required:false }
  ,servicePrices : Number
  ,discountedPrice : Number
  ,appointmentRequeirement : Boolean
  ,paymentMethod : [Number]
  ,remark : String
  ,ds:{type:Boolean,default:false}//delete status
});

//Model Declaration ===============================

//public Methods ===============================
//pricelistSchema.statics.pricelistsByCreator = function(paramUserAccountID, paramCallback){
//    return this.find({"ct.cuID" : paramUserAccountID}).sort('-ct.cd').exec(paramCallback); //static method
//   
//   //db.pricelists.ensureIndex({'ct.cuID':1,'md.lu':-1})
//};


return pricelistSchema;

};