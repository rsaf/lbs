/** * Created by rollandsafort on 3/1/15. */var lib = require("lib");module.exports = function (paramMongoose){    var servicePointDetailSchema = new paramMongoose.Schema({        s : lib.permissionsSchema({all:"r"}),        ct: { //creator            uID: {type:String},//id of the user who created the service            oID: {type:String},//organisation id            cd: {type: Date, default: Date.now}//creation date        },        md: {//modified            uID: {type:String},//id of user who changed the service            oID: {type:String},//organisation id            lu: {type:Date}//last updated date        },        spbi:{type:paramMongoose.Schema.Types.ObjectId, ref: 'servicepoints'},//servicepoint basic information        spl:{value:{type: String, default: '../../commons/images/corporateCommonIcon.png'}, verified: Boolean, verifiedDate: Date},//service point logo        spn: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point name        sprc:String,//service point reference code 事务编号        cspn: String, //corresponding service point name        spar: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point average rating 评价        sptn:String,//service point type names 网点类型        sppc: {value: {type:String,default:''}, verified: Boolean, verifiedDate: Date},//service point parent corporation 网点所属单位//populated        spst: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point service time 服务时间        spar: {value: {type:Boolean, default: false}, verified: Boolean, verifiedDate: Date},//service point appointment required 是否需要约约        sprn: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point reservation number 预约电话        spcn: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point contact number 网点联系电话        spa: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},//service point address 网点地址        description:{            text: {value: {type:String, default: ''}, verified: Boolean, verifiedDate: Date},            attachment:[{nm: String, fm: String, url: String,fs:Number, uuid: {type:paramMongoose.Schema.Types.ObjectId, default: paramMongoose.Types.ObjectId}}]        },        images: [{ url: String, uuid: {type:paramMongoose.Schema.Types.ObjectId, default: paramMongoose.Types.ObjectId} }],        videos: [{ url: String, uuid: {type:paramMongoose.Schema.Types.ObjectId, default: paramMongoose.Types.ObjectId} }],        audios: [{ url: String, uuid: {type:paramMongoose.Schema.Types.ObjectId, default: paramMongoose.Types.ObjectId}}],        faq:[{q:String, a:String, uuid: {type:paramMongoose.Schema.Types.ObjectId, default: paramMongoose.Types.ObjectId}}],        map: {coordinates:{latitude:Number, longitude:Number},itinerary:String,verified: Boolean, verifiedDate: Date}//service point location map 网点地图    });    //public Methods ===============================    servicePointDetailSchema.statics.readByUserAccountID = function(paramUserAccountID, credential, paramCallback){        return this.findOne(lib.authTransform({_id: paramUserAccountID},'r',credential), paramCallback); //static method    };    servicePointDetailSchema.methods.deleteByUserAccountID = function(paramUserAccountID, credential, paramCallback){        return this.findOne(lib.authTransform({_id:paramUserAccountID},'r',credential),paramCallback);    };    servicePointDetailSchema.statics.updateServicePointDetail = function(paramdetailsJson, credential, paramCallback ){        var query =  {_id:paramdetailsJson._id};        var update =  paramdetailsJson;        var options = { new: true };        return this.findOneAndUpdate(lib.authTransform(query,'w',credential), update, options, paramCallback);    };    return servicePointDetailSchema;};