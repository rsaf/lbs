/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var oCMM = require('cmm');
var oWMM= require('../wmm_Interface.js');
var transactionid;





exports.setUp = function setUp(callback) {
  function message(m){
      if (m.op === 'dependency')
      {
          m.ns = 'wmm';

        return oCMM.dependency(m);
      }
  }
  var init_message = {
      'op': 'init',
       ns : '',
      'pl':{fn:message}
      };
  oWMM.init(init_message).then(function (r) {
      callback();

  }).fail(function (r) {
      callback();
  });
};

exports.tearDown = function tearDown(callback) {
    callback();
};

exports.testCreateTransaction = function testCreateTransaction(test){
  oWMM.createTransaction({
    pl:{
      transaction:{
        description:'Insert service and request message. funcitons invoked are ...'
        ,modules:['smm','rmm']
      }
      ,"loginName": "haru"
      ,"currentOrganization": "54852b4bada015b113c0df7e"
    }
  })
  .then(function(msg){
    transactionid=msg.pl.transaction._id;
    test.equal(msg.pl.transaction.description,'Insert service and request message. funcitons invoked are ...','correct description');
    test.equal(msg.pl.transaction.ct.uID,'haru','correct created user');
    test.equal(msg.pl.transaction.modules[0],'smm','correct first module');
    test.equal(msg.pl.transaction.modules[1],'rmm','correct second module');
    return oWMM.abortTransaction({
      pl:{
        transaction:{
          _id:transactionid
        }
      }
    });
  }).then(function(msg){
    test.equal(msg.pl.status,'aborted','correct status');
    return oWMM.commitTransaction({
      pl:{
        transaction:{
          _id:transactionid
        }
      }
    });
  }).then(function(msg){
    test.equal(msg.pl.status,'commited','correct status');
    return oWMM.wmm_rollBackTransaction({
      pl:{
        transaction:{
          _id:transactionid
        }
      }
    });
  }).then(function(msg){
    test.equal(msg.pl.status,'rolledback','correct status');
    test.done();
  })
  .fail(function(reason){
    console.log('Failed creating a transaction:',reason);
    test.done();
  });
};




