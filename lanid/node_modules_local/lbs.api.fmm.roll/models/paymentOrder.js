/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

module.exports = function (sequelize, DataTypes) {

    return sequelize.define('paymentOrder', {
        transactionId: {type: DataTypes.STRING, notNull: true,comment:'Alipay out_trade_no'}, //Alipay out_trade_no
        serviceId: {type: DataTypes.STRING, notNull: true,comment:'Id of a service provided by a corporation'}, //Id of a service provided by a corporation
        serviceType:{type:   DataTypes.ENUM, values: ['CREDIT_PURCHASE', 'ACTIVITY','CREDIT_SALE'], allowNull: false, defaultValue: "ACTIVITY", comment:'Type of service'}, //User login
        serviceName: {type:DataTypes.STRING, defaultValue:'',comment:'Name of the service related to this order'},
        serviceProviderId: {type: DataTypes.STRING, notNull: true, comment:'Id of corporations service provider'}, // Id of corporation's service provider
        agentId: {type: DataTypes.STRING,  allowNull: true, comment:'Id of affiliate corporation'}, // Id of corporation's service provider
        orderAmount: {type: DataTypes.DECIMAL, isDecimal: true,defaultValue: 0.00, comment:'Total amount to be payed out to a service provider'}, // Total amount to be payed out to a service provider
        platformCommissionAmount: {type: DataTypes.DECIMAL, isDecimal: true,defaultValue: 0.00, comment:'Total comission amount taken by the system'}, // Total amount to be payed out to a service provider
        agentCommissionAmount: {type: DataTypes.DECIMAL, isDecimal: true,defaultValue: 0.00, comment:'Total affiliate commission payed for using this service'}, // Total amount to be payed out to a service provider
        corporationId: {type: DataTypes.STRING, notNull: true, comment:'Corporation id'}, // Corporation id
        //userLogin:{type: DataTypes.STRING, notNull: true,comment:'Login of the user who made the order'}, //User login
        userAccountId:{type: DataTypes.STRING, notNull: true, comment:'User account id'}, // User account id
        paymentType: {type:   DataTypes.ENUM, values: ['offline', 'online', 'prepaid'], allowNull: false, defaultValue: "online", comment:'Type of Payment used for the order'}, // A the moment orders can have 3 types of payments
        orderStatus: {type:   DataTypes.ENUM, values: ['pending', 'paid', 'consumed','split','done'], allowNull: false, defaultValue: "pending", comment:'Current status of the order'} // Current status of the order
    },
    {
        tableName: 'paymentOrder',
        freezeTableName: true
    }
    );

};


