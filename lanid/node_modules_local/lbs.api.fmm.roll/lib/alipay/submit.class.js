/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var md5 = require('./md5.function');
var core = require('./core.function');
var url = require('url');
var Q = require('q');

function AlipaySubmit(alipay_config) {
    //Set local configuration
    //this.alipay_gateway_new = 'https://mapi.alipay.com/gateway.do?';
    this.alipay_gateway_new = alipay_config['https_verify_url'];//'http://localhost/fakeAlipay?';
    this.alipay_config = alipay_config;
};

/**
 * 建立请求，以模拟远程HTTP的POST请求方式构造并获取支付宝的处理结果
 * @param para_temp 请求参数数组
 * @return 支付宝处理结果
 */
AlipaySubmit.prototype.buildRequestHttp = function (m) {
//Initialize Promise
    var r = {"pl": null, "er": null};
    var deferred = Q.defer();
    //Configuration variables
    var gatewayUrl = this.alipay_gateway_new;
    var cacert = this.alipay_config['cacert'];
    var inputCharset = this.alipay_config['inputCharset'].toLowerCase().trim();
    var port = this.alipay_config['port'];
    var parameters = new Array();
    parameters.partner = this.alipay_config['partner'];
    //Build request parameters in the right format
    var requestParameters = this.buildRequestParameters(parameters);
    //Message to be passed to http request
    console.log("config:",this.alipay_config);
    console.log("my url",gatewayUrl);
    console.log("my params",requestParameters);
    var requestParams = {pl: {url: gatewayUrl, port:port,cacert: cacert, inputCharset: inputCharset, parameters: requestParameters}, er: null};
    core.getHttpResponsePOST(requestParams).then(function (response) {
        console.log('buildHttp Resposnse',response);
        r.pl = response.pl;
        deferred.resolve(r);
    }).fail(function (error) {
        r.er = error;
        deferred.reject(r);
    });
    return deferred.promise;
};
/**
 * 生成要请求给支付宝的参数数组
 * @param para_temp 请求前的参数数组
 * @return 要请求的参数数组
 */
AlipaySubmit.prototype.buildRequestParameters = function (parameters) {
    //Extract payload
    var signatureType = this.alipay_config['signatureType'].trim().toUpperCase();
    //Filter and Sort parameters
    var filteredParams = core.paraFilter(parameters);
    var sortedParams = core.argSort(filteredParams);
    //Build Signature needed for communication with Alipay
    var signature = this.buildRequestSignature(sortedParams);
    sortedParams['sign'] = signature;
    sortedParams['sign_type'] = signatureType;
    return sortedParams;
};
/**
 * 生成签名结果
 * @param para_sort 已排序要签名的数组
 * return 签名结果字符串
 */
AlipaySubmit.prototype.buildRequestSignature = function (sortedParameters) {
    //Create Link String from URL parameters
    var preString = core.createLinkstring(sortedParameters);
    //Configuration Variables
    var signatureType = this.alipay_config['signatureType'].trim().toUpperCase();
    var apiKey = this.alipay_config['apiKey'];
    //Create Signature
    var signature = "";
    if (signatureType == "MD5") {
        signature = md5.md5Sign(preString, apiKey);
    }
    else {
        signature = "";
    }
    return signature;
};

/**
 * 建立请求，以表单HTML形式构造（默认）
 * @param para_temp 请求参数数组
 * @param method 提交方式。两个值可选：post、get
 * @param button_name 确认按钮显示文字
 * @return 提交表单HTML文本
 */
AlipaySubmit.prototype.getRequestParameters = function (m) {
    var data = m.pl;
    var var_notify_url = this.alipay_config['create_direct_pay_by_user_notify_url'] + '/' + data.out_trade_no + '.json' ;
    var var_return_url = this.alipay_config['create_direct_pay_by_user_return_url'] + '/' + data.out_trade_no + '.json' ;

    var parameters = {
        service: 'create_direct_pay_by_user'
        ,partner: this.alipay_config['partner']
        ,payment_type: '1'
        ,currency: 'RMB'
        ,notify_url: url.resolve(this.alipay_config['host'],var_notify_url)
        ,seller_email: this.alipay_config['seller_email']
        ,out_trade_no: data.out_trade_no
        ,subject: data.subject
        //price: data.price,
        ,total_fee: data.price
        ,_input_charset: this.alipay_config['inputCharset'].toLowerCase().trim()
        ,return_url: url.resolve(this.alipay_config['host'],var_return_url )
    };
    console.log("ALIPAY PARAMS:",parameters);
    if (data.hasOwnProperty('body')) {
        parameters.body = data.pl.body;
    }
    
    return core.createLinkstring(this.buildRequestParameters(parameters));
    
};
exports.AlipaySubmit = AlipaySubmit;

