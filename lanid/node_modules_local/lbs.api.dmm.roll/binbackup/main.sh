#!/bin/sh
#var command=paramCommand + " " + file_uuid + " " + paramExtension + " " + paramOptions;
export DIRNAME=`dirname $0`

# customizable configuration (Host, OS-dependent)
export IDENTIFY=/usr/local/bin/identify
export MONTAGE=/usr/local/bin/montage
export CONVERT=/usr/local/bin/convert
export COMPOSITE=/usr/local/bin/composite
export QRENCODE=/usr/local/bin/qrencode
export LOGO=$DIRNAME/logo.ico
export SERVERNAME=localhost
export SERVERDISPLAYNAME=www.idlan.cn
export SERVERPORT=8080
export IMAGE_ROOT="$HOME/sites/bucket.$SERVERNAME.static/photos"
export FORM_ROOT="$HOME/sites/bucket.$SERVERNAME.static/forms"
export FILE_ROOT="$HOME/sites/bucket.$SERVERNAME.static/files"
export QRCODE_ROOT="$HOME/sites/bucket.$SERVERNAME.static/qrcodes"

if [ -f "$DIRNAME/config.sh" ]; then
  source "$DIRNAME/config.sh"
fi
echo "\n"
echo "$IMAGE_ROOT"
echo "$FORM_ROOT"
echo "$FILE_ROOT"
echo "$QRCODE_ROOT"

COMMAND=$( echo "$SSH_ORIGINAL_COMMAND" | cut -d " " -f 1 )
[[ -z "$COMMAND" ]] && echo "No command given" && exit 10
echo "The following command have been obtained: " $COMMAND

export FILE_UUID=$( echo "$SSH_ORIGINAL_COMMAND" | cut -d " " -f 2 )
# test for nonzero length - sanity check
[[ -z "$FILE_UUID" ]] && echo "No UUID given" && exit 20
# test for validity of the uuid
[[ -z `echo "$FILE_UUID" | egrep "[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}"` ]] && echo "Invalid UUID" && exit 30
echo "The following UUID have been obtained: " $FILE_UUID

export FILE_EXT=$( echo "$SSH_ORIGINAL_COMMAND" | cut -d " " -f 3 )
[[ -z "$FILE_EXT" ]] && echo "No file extension given" && exit 40
echo "the following file extension have been obtained: " $FILE_EXT

export OPTIONS=$( echo "$SSH_ORIGINAL_COMMAND" | cut -d " " -f 4 )
echo "The following options have been obtained: " $OPTIONS

if [ "$COMMAND" == "uploadphoto" ]; then
  $DIRNAME/uploadphoto.sh
elif [ "$COMMAND" == "watermark" ]; then
  $DIRNAME/watermark.sh
elif [ "$COMMAND" == "resizephoto" ]; then
 $DIRNAME/resizephoto.sh
elif [ "$COMMAND" == "printlayout" ]; then
  $DIRNAME/printlayout.sh
elif [ "$COMMAND" == "uploadform" ]; then
  $DIRNAME/uploadform.sh
elif [ "$COMMAND" == "uploadfile" ]; then
  $DIRNAME/uploadfile.sh
elif [ "$COMMAND" == "qrcode" ]; then
  $DIRNAME/qrcode.sh
else
  echo "ERR: Invalid command $COMMAND"
  exit 50
fi

#sub process return value
subprocess_rv="$?"

exit $subprocess_rv