#!/usr/bin/env node
var debug = require('debug')('api');
var Q = require('q');


var scmPassportObject = null;
var olmRequestLoggerFunction = null;
var scmCheckUserFunction = null;
var server = null;
var esbMessageFunction = null;
var p1 = null;
var p2 = null;
var p3 = null;

var startTime = new Date();
var endTime = null;
console.log('\nBootstrapper: starting system boot strapping at ' + startTime.toLocaleString());
var esb = require('esb');
var bs = null;
console.log('Bootstrapper: loading ESB ...' );

var esbPromise = esb.startESB().then(function(r){
  //console.log(r);
  esbMessageFunction = r.pl.fn;

  p1 = esbMessageFunction({
    ns:'scm',
    op: 'getPassport'
  });

  p2 = esbMessageFunction({
    ns:'olm',
    op: 'getLogRequest'
  });

  p3 = esbMessageFunction({
    ns:'scm',
    op: 'getUserIsAuthorizedChecker'
  });

  console.log('\nBootstrapper: getting BS dependencies ...' );
  var p =  Q.all([p1,p2,p3]).then(function(r){
    //console.log(r);

    scmPassportObject = r[0].pl.fn;
    olmRequestLoggerFunction = r[1].pl.fn;
    scmCheckUserFunction = r[2].pl.fn;

    console.log('\Bootstrapper: starting BS with dependencies injected...' );
    bs = require('../bs.js').startBS(scmPassportObject, scmCheckUserFunction,olmRequestLoggerFunction,esbMessageFunction);

    var server = bs.listen(bs.get('port'), function () {

      console.log('\nBootstrapper: BS is up and listening on port: ' + server.address().port);
      console.log('Bootstrapper: ESB and BS are both up and ready to handle requests....' );
      endTime = new Date();
      console.log('Bootstrapper: system boot strapping commpleted at  ' + endTime.toLocaleString());
      console.log('Bootstrapper: system boot strapping took ' + ((endTime.getTime() - startTime.getTime())/1000) + ' seconds ');
    });

  });

});


