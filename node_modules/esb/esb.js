
module.exports.startESB = function(){

var fs = require('fs');
var Q = require('q');

ops = {}; // op to module
all_modules = {};
DEBUG = false;

console.log('\n\nESB: loading system modules ...');

fs.readdirSync(__dirname + '/node_modules').forEach(function(node_module) {
  var module_path = __dirname + '/node_modules/' + node_module;
  fs.readdirSync(module_path).forEach(function(file) {
    if (file.match(/.*_Interface\.js/g) !== null && file !== 'index.js') {
      var file_path = module_path + '/' + file;
      DEBUG && console.log('match found ' + file_path);
      all_modules[node_module] = require(file_path);
    }
  });
});

console.log('ESB: building system registry ...');
for(var module_name in all_modules) {
  if(all_modules.hasOwnProperty(module_name)){
    DEBUG && console.log(module_name);
    if(all_modules[module_name]['operations'] instanceof Array) {
      DEBUG && console.log('business operations found in ' + module_name);
      all_modules[module_name].operations.forEach(function (op) {
        if(op instanceof Function) {
          //console.log(op.name);
          if(ops[op.name] && op.name !== 'init') {
            throw new Error('Duplicate operation: ' + op.name + ' in ' + module_name)
          }
          ops[op.name] = all_modules[module_name][op.name];
          console.log('ESB: registering '+ module_name + " --> " + op.name);
        }
      })
    }
  }
}

function message(m) {
  //console.log(m);
  if(!m['op']) {
    console.log('no operation specified');
    return;
  }
  // turn failed promises into messages
  return ops[m.op](m).fail(function(err) {
    console.log('ESB: message routing failed: ' + ms.op + err);
    return {
      ns: '',
      pl:null,
      er: {ec: null, em: err + ' for message: ' + m}
    }
  });

}

var modules_initialization_promises = [];

for(var module_name in all_modules) {
  if(!all_modules.hasOwnProperty(module_name)) continue;
  var current_module = all_modules[module_name];
  if(current_module.init instanceof Function) {
    var init_message = {
      'op': 'init',
       ns : '',
      'pl': {fn: function(m) {
        m.ns = module_name;
        return message(m);
      }
    }};
    console.log('\nESB: initiating ' + module_name);
    p = current_module.init(init_message);
    modules_initialization_promises.push(p);
  }
}

return Q.all(modules_initialization_promises)
  .then(function(r) {

      //console.log(r);
      console.log('\nESB: completing modules initialization...');
      for( var i in r )
      {
        if(!(r[i])) continue;
        console.log( 'ESB: '+ r[i].pl.pm);
      }

      console.log('ESB: all modules initialization done and dusted !!! ');
      console.log('ESB: all modules are up and ready to receive messages...');
    return Q({pl:{fn:message},er:null});

  }).fail(function(r){
      console.log('ESB: modules initialized failed with message: ' + r);
      return Q({pl:null, er:{ec:null, em:r}})
    });
};