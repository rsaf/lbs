var fs = require('fs');
var Q = require('q');

ops = {}; // op to module
all_modules = {};
DEBUG = false;

fs.readdirSync(__dirname + '/node_modules').forEach(function(node_module) {
  var module_path = __dirname + '/node_modules/' + node_module;
  fs.readdirSync(module_path).forEach(function(file) {
    if (file.match(/.*_Interface\.js/g) !== null && file !== 'index.js') {
      var file_path = module_path + '/' + file;
      DEBUG && console.log('match found ' + file_path);
      all_modules[node_module] = require(file_path);
    }
  });
});

for(var module_name in all_modules) {
  if(all_modules.hasOwnProperty(module_name)){
    DEBUG && console.log(module_name);
    if(all_modules[module_name]['operations'] instanceof Array) {
      DEBUG && console.log('business operations found in ' + module_name);
      all_modules[module_name].operations.forEach(function (op) {
        if(op instanceof Function) {
          //console.log(op.name);
          if(ops[op.name] && op.name !== 'init') {
            throw new Error('Duplicate operation: ' + op.name + ' in ' + module_name)
          }
          ops[op.name] = all_modules[module_name][op.name];
          console.log(module_name + " --> " + op.name);
        }
      })
    }
  }
}

function message(m) {
  if(!m['op']) {
    console.log('no operation specified');
    return;
  }
  // turn failed promises into messages
  return ops[m.op](m).fail(function(err) {
    return {
      op: 'err',
      pl: err
    }
  });
}

var modules_initialization_promises = [];

for(var module_name in all_modules) {
  if(!all_modules.hasOwnProperty(module_name)) continue;
  var current_module = all_modules[module_name];
  if(current_module.init instanceof Function) {
    var init_message = {
      'op': 'init',
      'pl': function(m) {
        m.ns = module_name;
        return message(m);
      }
    };
    console.log('\ncalling init on ' + module_name);
    p = current_module.init(init_message);
    modules_initialization_promises.push(p);
  }
}

Q.all(modules_initialization_promises)
  .then(function() {
    console.log('ESB modules initialized!');
  });

exports.message = message;
