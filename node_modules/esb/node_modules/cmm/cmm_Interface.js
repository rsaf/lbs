var Q = require('q');
var message;
var mongodbConfigs = require('./configs/mongooseConfigs.js');
var standardConfigs = require('./configs/standardConfigs.js');
var navigationConfigs = require('./configs/navigationConfigs.js');

function init(m) {
  var r = {pl: null , er:null};
  //console.log(m);
  if(!(m.pl.fn instanceof Function)) {
    console.log('cmm initiation m.pl.fn contains no function...');
    r.er = { em: 'Payload pl contains no function'};
    return Q.fail(r);
  }
  else {
    exports.message = m.pl.fn;
    console.log('cmm: cmm is ready for system bootstrapping...');
    r.pl  = {pm: 'cmm initialization done! '};
    return Q(r)
  }

}

function getConfigs(namespace, dependencyName) {
  if(namespace === 'module1' && dependencyName === 'internal_service') {
    return {url: 'http://government.cn/api/v1/call'};
  }
  else if(namespace==='mdm' && dependencyName === 'smtp'){
    return standardConfigs.smtpConfigs();
  }
  else {
    console.log('cmm: Unknown namespace: ' + namespace + '  dependency:' + dependencyName);
  }
}

function dependency(m) {
  var r =  {pl:null, er:null};
  if(m.pl.dn === 'mongoose') {
    var mongooseODM  = mongodbConfigs.getMongoose(m.ns);
    r.pl = { fn: mongooseODM};
    return Q(r);
  }
  else if (m.pl.dn === 'bsport'){
    r.pl = {fn: standardConfigs.getBSPort()};
    return Q(r);
  }

  else if (m.pl.dn ==='navigation'){
    r.pl = {fn:navigationConfigs.getNavigations()};
    return Q(r);
  }

  else if (m.pl.dn ==='photostorage'){
    r.pl = {fn:standardConfigs.getPhotoStorage()};
    return Q(r);
  }

  else {
    // delegate back instantiation to the caller
    console.log('cmm: delegating instantiation of ' + m.pl.dn + ' back to ' + m.ns);
    return exports.message({
      op: 'instantiate',
      ns: m.ns,
      pl: {
        dn: m.pl.dn, //dependency name
        dc: getConfigs(m.ns, m.pl.dn) //dependency configurations
      }
    });
  }
}


module.exports.operations = [init, dependency];

//re-export ops (for testing)
exports.operations.forEach(function(op) {
  exports[op.name] = op;
})