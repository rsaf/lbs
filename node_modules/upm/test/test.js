/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var oUPM = require('../upm.js');

exports.testCreatePersonal = function(test){
    
    var personal = {
    "userAccountID": "542d0eff3748330000dc5632",
    "completion": 5, //completion Percent 
    basic:{ 
        names: {"value": "Awang Bang", "verified":false, "verifiedDate":  Date.now()},
        gender: {"value": "Male", "verified":false, "verifiedDate":  Date.now() }
    }};

    var paramPersonalJsonInput = JSON.parse(JSON.stringify(personal));
    
    oUPM.createPersonalProfile(paramPersonalJsonInput, function(paramError, paramPersonalJsonOutput){
    test.expect(5);
    test.equals(paramError, null);
    test.equals(paramPersonalJsonInput.userAccountID,paramPersonalJsonOutput.userAccountID);
    test.equals(paramPersonalJsonInput.completion,paramPersonalJsonOutput.completion);
    test.equals(paramPersonalJsonInput.basic.names.value,paramPersonalJsonOutput.basic.names.value);
    test.equals(paramPersonalJsonInput.basic.gender.value,paramPersonalJsonOutput.basic.gender.value);
    test.done();
    });
};



exports.testReadPersonalByID = function(test){
    
    var personal = {
    "userAccountID": '542d0eff3748330000dc5632',
    "completion": 5,
    basic:{ 
        names: {"value": "Awang Bang", "verified":false, "verifiedDate":  Date.now()},
        gender: {"value": "Male", "verified":false, "verifiedDate":  Date.now() }
    }};
    var paramPersonalJsonInput = JSON.parse(JSON.stringify(personal));
    
   
    oUPM.readPersonalProfile(paramPersonalJsonInput.userAccountID, function(paramError, paramPersonalJsonOutput){
    test.expect(4);
    test.equals(paramError, null);
    test.equals(paramPersonalJsonInput.userAccountID,paramPersonalJsonOutput.userAccountID);
    //test.equals(paramPersonalJsonInput.completion,paramPersonalJsonOutput.completion);
    test.equals(paramPersonalJsonInput.basic.names.value,paramPersonalJsonOutput.basic.names.value);
    test.equals(paramPersonalJsonInput.basic.gender.value,paramPersonalJsonOutput.basic.gender.value);
    test.done();
    });
};


exports.testUpdatePersonal = function(test){
    
    var personal = {
    "completion": 40,
    basic:{ 
        names: {"value": "Awang Bang", "verified":false, "verifiedDate":  Date.now()},
        gender: {"value": "Male", "verified":false, "verifiedDate":  Date.now() }
    }};
    var paramPersonalJsonInput = JSON.parse(JSON.stringify(personal));
    var paramUserAccountID = '542d0eff3748330000dc5632';

    oUPM.updatePersonalProfile(paramUserAccountID, paramPersonalJsonInput, function(paramError, paramPersonalJsonOutput){
        //console.log(' \n input \n ' + JSON.stringify(paramPersonalJsonInput));
        //console.log(' \n output \n ' + paramPersonalJsonOutput.toString());
    test.expect(5);
    test.equals(paramError, null);
    test.equals(paramUserAccountID,paramPersonalJsonOutput.userAccountID);
    test.equals(paramPersonalJsonInput.completion,paramPersonalJsonOutput.completion);
    test.equals(paramPersonalJsonInput.basic.names.value,paramPersonalJsonOutput.basic.names.value);
    test.equals(paramPersonalJsonInput.basic.gender.value,paramPersonalJsonOutput.basic.gender.value);
    test.done();
    });
};



