/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
module.exports = function (paramMongoose){

//Model Schema ===============================
var personalSchema = paramMongoose.Schema ({
    //_id: String,
    userAccountID: paramMongoose.Schema.Types.ObjectId, // Profile UserAccountID from User Account ID on User.ID
    completion: Number,
    basic:{
    IDCode:  {value: String, verified: Boolean, verifiedDate: Date},
    names: {value: String, verified: Boolean, verifiedDate: Date},
    lzID: String,
    gender:{value: String, verified: Boolean, verifiedDate: Date},
    birthDay:{value: Date, verified: Boolean, verifiedDate: Date},
    country: {value: String, verified: Boolean, verifiedDate: Date},
    nativeLoc: {value: String, verified: Boolean, verifiedDate: Date},
    currentLoc:  {value: String, verified: Boolean, verifiedDate: Date}
    },
    contact: {
     email1: {value: String, verified: Boolean, verifiedDate: Date},
     email2: {value: String, verified: Boolean, verifiedDate: Date},
     tel1: {value: String, verified: Boolean, verifiedDate: Date},
     tel2: {value: String, verified: Boolean, verifiedDate: Date},
     qq: {value: String, verified: Boolean, verifiedDate: Date},
     weixin: {value: String, verified: Boolean, verifiedDate: Date}
    },
    author: {createdUserID: String, createdOrgID: String, createdDate: String},
    acl: {c: [String], r: [String], u: [String], d: [String] }
});

//Model Declaration ===============================
//var  Personal = mongoose.model('personal',personalSchema); 

//public Methods ===============================
personalSchema.statics.readByUserAccountID = function(paramUserAccountID, paramCallback){
   return this.findOne({userAccountID: paramUserAccountID},paramCallback); //static method
};

personalSchema.methods.deleteByUserAccountID = function(paramUserAccountID, paramCallback){
   return this.findOne({userAccountID:paramUserAccountID},paramCallback);
};

personalSchema.statics.updatePersonalProfile = function(paramUserAccountID, paramPersonalJson, paramCallback ){

var query =  {userAccountID:paramUserAccountID};
var update =  paramPersonalJson;
var options = { new: true };
//console.log(query);
//console.log(update);
delete update.userAccountID;
//console.log(query);
//console.log(update);

this.findOneAndUpdate(query, update, options, paramCallback);

};

return personalSchema;

};
