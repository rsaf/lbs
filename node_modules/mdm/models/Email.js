/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

var nodemailer = require('nodemailer');
var smtpTransport = require('nodemailer-smtp-transport');
var transportOption = smtpTransport({
    service: 'Hotmail',
    auth: {
        user: 'nodesmtp@hotmail.com', //or  '3106740387@qq.com'
        pass: 'MDMsmtptest'
    }
});
var transporter = nodemailer.createTransport(transportOption);

module.exports = function(paramMongoose) {
    var emailSchema = paramMongoose.Schema({
        from: String,
        to: String,
        subject: String,
        body: String,
        attachments: [Buffer],
        sendStatus: Boolean
    });

    emailSchema.methods.sendEmail = function(paramEmailMessage, paramCallback) {
        this.from = paramEmailMessage.from;
        this.to = paramEmailMessage.to;
        this.subject = paramEmailMessage.subject;
        this.body = paramEmailMessage.body;
        if (paramEmailMessage.attachments) {
            this.attachments = paramEmailMessage.attachments;
        }
        this.sendStatus = false;

        this.save(function(parammError, parammMessage) {
            if (parammMessage) {
                transporter.sendMail({
                    from: parammMessage.from,
                    to: parammMessage.to,
                    subject: parammMessage.subject,
                    text: parammMessage.body
                }, function(parammmError, parammmInfo) {
                    if (parammmInfo) {
                        console.log("Send Mail Response: " + parammmInfo.response.toString());
                        parammMessage.sendStatus = true;
                        parammMessage.save(function(parammmmError, parammmmMessage) {
                            if (parammmmMessage) {
                                paramCallback(null, true);
                            }
                            else {
                                paramCallback(parammmmError, null);
                            }
                        });
                    }
                    else {
                        paramCallback(parammmError, null);
                    }
                });
            }
            else {
                return paramCallback(parammError, null);
            }
        });
    };
    return emailSchema;
};

