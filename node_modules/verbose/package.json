{
  "name": "verbose",
  "description": "Distributed Event Bus",
  "version": "0.2.3",
  "author": {
    "name": "Pedro Teixeira",
    "email": "pedro.teixeira@gmail.com"
  },
  "contributors": [
    {
      "name": "Pedro Teixeira"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/pgte/verbose.git"
  },
  "bugs": {
    "url": "http://github.com/pgte/verbose/issues"
  },
  "engines": [
    "node >= 0.8.1"
  ],
  "main": "./node.js",
  "dependencies": {
    "reconnect": "*",
    "duplex-emitter": "*",
    "node-uuid": "*",
    "propagate": "*",
    "invert-stream": "*"
  },
  "devDependencies": {
    "tap": "0.3.x",
    "async": "*",
    "event-stream": "*"
  },
  "scripts": {
    "test": "node node_modules/tap/bin/tap.js tests/peer_pool.js tests/messages.js tests/peer_protocol.js tests/peer_stream.js tests/buffered_peer.js tests/node.js tests/stream_emitter.js",
    "start": "node server.js"
  },
  "tags": [
    "remote",
    "event",
    "emitter",
    "synchronization",
    "peer to peer"
  ],
  "readme": "# verbose [![Build Status](https://secure.travis-ci.org/pgte/verbose.png)](http://travis-ci.org/pgte/verbose)\n\nDistributed event bus\n\n## Features\n\n* Automatic reconnect with back-off\n* Reconnect resilience: messages get buffered for retransmission if necessary\n* Create any topology of nodes\n* Pluggale transport\n\n## Create a Node\n\n```javascript\nvar verbose = require('verbose');\nvar node = verbose();\n```\n\nYou can also give it some options:\n\n```javascript\nvar options = {\n  node_id: 'NODE-ID-000001'\n};\n\nvar node = verbose(options);\n```\n\nHere are the options:\n\n| option              | description                                       |  default    |\n|---------------------|---------------------------------------------------|-------------|\n| node_id             | node identifier for other peers                   | random UUID |\n| timeout             | inactivity timeout (ms)                           | 60000       |\n| bufferTimeout       | maximum retransmit resilience                     | 900000      |\n| bufferMax           | maximum number of buffered messages kept by peer  | 1000        |\n| acknowledgeInterval | message acknowledge interva (ms)                  | 1000        |\n| maxPeers            | message acknowledge interva (ms)                  | 1000        |\n| transport           | transport name or object. If object, must provide a `listen` and a `connect` methods. See [example](https://github.com/pgte/verbose/blob/master/transport/tcp.js)                | \"tcp\"        |\n\n## Make it listen\n\n```javascript\nnode.listen(port);\n```\n\n## Connect to another node in another process\n\n```javascript\nnode.connect(port[, host]);\n```\n\n## Emit events on a node\n\n```javascript\nnode.emit('event', 'a', 1);\n```\n\n## Receive events\n\n```javascript\nnode.on('event', function() {\n  console.log('got event:', arguments);\n});\n```\n\n## End a Node\n\n```javascript\nnode.end();\n```\n\n## Underlying stream\n\nYou can access the underlying stream:\n\n```javascript\nnode.stream.on('end', function() {\n  console.log('node ended');\n});\n```\n\nBesides being a duplex stream, it emits the following events:\n\n* `connect` - when the peer connects to the remote peer (transport layer)\n* `peerid` - when the remote peer gets identified during the hand-shake protocol\n* `initialized` - when the peer handshakes with the remote peer\n* `acknowledge` - when there is an acknowledge message from the remote peer\n* `disconnect` - when a peer gets disconnected from the remote peer\n* `reconnect` - when the peer reconnects to the remote peer\n* `backoff` - when the reconnect algorithm has to back off because of an unsuccessful retry\n\n## Peer control\n\nWhen connecting you can get access to the peer object:\n\n```javascript\nvar peer = node.connect(port, host);\n```\n\nWhich you can then use to end:\n\n```javascript\npeer.end();\n```\n\n## Licence\n\nMIT\n",
  "readmeFilename": "README.md",
  "_id": "verbose@0.2.3",
  "dist": {
    "shasum": "6692911b9c5dcf8e421d1d413759401b4982c41f",
    "tarball": "http://registry.npmjs.org/verbose/-/verbose-0.2.3.tgz"
  },
  "_from": "verbose@",
  "_npmVersion": "1.2.11",
  "_npmUser": {
    "name": "pgte",
    "email": "pedro.teixeira@gmail.com"
  },
  "maintainers": [
    {
      "name": "pgte",
      "email": "pedro.teixeira@gmail.com"
    }
  ],
  "directories": {},
  "_shasum": "6692911b9c5dcf8e421d1d413759401b4982c41f",
  "_resolved": "https://registry.npmjs.org/verbose/-/verbose-0.2.3.tgz"
}
